---
# SPDX-license-identifier: Apache-2.0
##############################################################################
# Copyright (c) 2020
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Apache License, Version 2.0
# which accompanies this distribution, and is available at
# http://www.apache.org/licenses/LICENSE-2.0
##############################################################################

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: danm
rules:
  - apiGroups: ["danm.k8s.io"]
    resources:
      - danmnets
      - danmeps
      - tenantnetworks
      - clusternetworks
    verbs:
      - '*'
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - watch
      - list
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: danm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: danm
subjects:
  - kind: ServiceAccount
    name: danm
    namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: danm
  namespace: kube-system
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: netwatcher
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
rules:
  - apiGroups: ["danm.k8s.io"]
    resources:
      - danmnets
      - tenantnetworks
      - clusternetworks
    verbs:
      - get
      - watch
      - list
      - update
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: netwatcher
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: netwatcher
subjects:
  - kind: ServiceAccount
    name: netwatcher
    namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: netwatcher
  namespace: kube-system
  labels:
    kubernetes.io/cluster-service: "true"
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: svcwatcher
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
rules:
  - apiGroups: ["danm.k8s.io"]
    resources:
      - danmeps
    verbs:
      - get
      - watch
      - list
      - update
      - create
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - endpoints
    verbs:
      - get
      - watch
      - list
      - update
      - create
      - delete
  - apiGroups:
      - ""
    resources:
      - services
      - pods
    verbs:
      - list
      - watch
      - get
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - get
      - create
      - update
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: svcwatcher
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: svcwatcher
subjects:
  - kind: ServiceAccount
    name: svcwatcher
    namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: svcwatcher
  namespace: kube-system
  labels:
    kubernetes.io/cluster-service: "true"
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: danm-webhook
rules:
  - apiGroups: ["danm.k8s.io"]
    resources:
      - tenantconfigs
      - danmeps
    verbs: ["*"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: danm-webhook
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: danm-webhook
subjects:
  - kind: ServiceAccount
    name: danm-webhook
    namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: danm-webhook
  namespace: kube-system
